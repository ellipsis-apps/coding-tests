# Stage 1: Build the app using .NET SDK
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR "/src"

# Copy csproj and restore (caches layers for faster rebuilds)
COPY ["ellipsis.apps.Web/ellipsis.apps.Web.csproj", "."]
RUN dotnet restore "ellipsis.apps.Web.csproj"

# Copy source and build
COPY "ellipsis.apps.Web" .
WORKDIR "/src"
#RUN dotnet build "ellipsis.apps.Web.csproj" -c Release -o /app/build
RUN dotnet publish "ellipsis.apps.Web.csproj" -c Release -o /app/publish 

# Publish static files (UseAppHost=false skips server host for standalone WASM)
FROM build AS publish
RUN dotnet publish "ellipsis.apps.Web.csproj" -c Release -o /app/publish /p:UseAppHost=false
#RUN dotnet publish "ellipsis.apps.Web.csproj" -c Release -o /app/publish --self-contained false -r linux-x64 /p:PublishTrimmed=false /p:ScopedCssEnabled=true /p:DisableScopedCssBundling=false
RUN ls -la /usr/share/nginx/html && echo "Files copied successfully!"
# Stage 2: Serve with Nginx
FROM nginx:alpine AS final
EXPOSE 80

# Copy published wwwroot to Nginx's static file dir
WORKDIR /nginx/html
COPY --from=publish /app/publish/wwwroot .

# Copy custom Nginx config for SPA routing
COPY nginx.conf /nginx/conf/nginx.conf
